
package org.eurocarbdb.action.hplc;

import org.eurocarbdb.action.*;
import org.eurocarbdb.dataaccess.*;
import org.eurocarbdb.dataaccess.hplc.*;
import org.eurocarbdb.dataaccess.hibernate.*;

import org.hibernate.*; 
import org.hibernate.criterion.*; 

import java.util.*;

/**
 * @author 			aceroni
 * @version			$Rev
 */

public class InitDevices extends EurocarbAction {

    static String[][] instruments = new String[2][6];    

    public int added_manufacturers = 0;

    public int added_devices = 0;

    static {
        instruments[0] = new String[]{ "Waters" , "2475", "230", "300", "20", "10" };
        instruments[1] = new String[]{ "Waters", "2488", "250", "280", "10", "10" };
    }
 

    public int getAddedManufacturers() {
	return added_manufacturers;
    }

    public int getAddedDevices() {
	return added_devices;
    }

 /*   public Collection<Manufacturer> getManufacturers() {
	Criteria crit = HibernateUtil.getSession().createCriteria(Manufacturer.class);
	return crit.list();	
    }
*/
    public Collection<Detector> getDetector() {
	Criteria crit = HibernateUtil.getSession().createCriteria(Detector.class);
	return crit.list();
    } 

    
    public String execute() throws Exception {

	added_manufacturers = 0;  
	added_devices = 0;
	
	for( int i=0; i<instruments.length; i++ ) {

	    //----------
	    // add new device
	    
	    // set the manufacturer
	    Detector detector = findManufacturer(instruments[i][0]);
	    if( detector==null ) {
		// create a new manufacturer
		detector = new Detector(instruments[i][0]);

		// store the manufacturer
		Eurocarb.getEntityManager().store(manufacturer);  	    

		added_manufacturers++;
	    }

	    // check if the device is existing
	    Device device = findDevice(instruments[i][1]);
	    if( device==null ) {

		// create a new device
		device = new Device(manufacturer,instruments[i][1],instruments[i][2]);

		// store
		Eurocarb.getEntityManager().store(device);  	

		added_devices++;    
	    }
	}
	
        return SUCCESS;
    }      

    

    public Manufacturer findManufacturer(String manufacturer) {
	Criteria crit = HibernateUtil.getSession().createCriteria(Manufacturer.class).add(Restrictions.eq("name", manufacturer));
	
	Collection<Manufacturer> list = crit.list();
	if( list==null || list.size()==0 )
	    return null;
	return list.iterator().next();
    }  

    public Device findDevice(String device) {
	Criteria crit = HibernateUtil.getSession().createCriteria(Device.class).add(Restrictions.eq("model", device));
	
	Collection<Device> list = crit.list();
	if( list==null || list.size()==0 )
	    return null;
	return list.iterator().next();
    }
      

}
